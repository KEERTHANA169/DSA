import java.util.*;

class Solution {
    public List<List<Integer>> palindromePairs(String[] words) {
        
        HashMap<String,Integer> map = new HashMap<>();
        List<List<Integer>> res= new ArrayList<>();

        for(int i=0;i<words.length;i++)
        {
            map.put(new StringBuilder(words[i]).reverse().toString(),i);
        }

        for(int i=0;i<words.length;i++)
        {
            String word=words[i];
            int len =word.length();

            for(int j=0;j<=len;j++)
            {
                String prefix=word.substring(0,j);
                String suffix = word.substring(j);

                if(ispal(prefix))
                {
                    Integer idx=map.get(suffix);
                    if(idx!=null && idx !=i) res.add(Arrays.asList(idx,i));
                }

                if(j<len && ispal(suffix))
                {
                    Integer idx = map.get(prefix);
                    if(idx !=null && idx !=i) res.add(Arrays.asList(i,idx));
                }
            }
        }
    return res;
}
private boolean ispal(String s)
{
    int l=0;int r=s.length()-1;
    while(l<r)
    {
        if(s.charAt(l++)!=s.charAt(r--)) return false;
    }
    return true;
}
}
